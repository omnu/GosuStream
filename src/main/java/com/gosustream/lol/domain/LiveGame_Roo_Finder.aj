// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.gosustream.lol.domain;

import com.gosustream.lol.domain.LiveGame;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect LiveGame_Roo_Finder {
    
    public static TypedQuery<LiveGame> LiveGame.findLiveGamesByBroadcast(Boolean broadcast) {
        if (broadcast == null) throw new IllegalArgumentException("The broadcast argument is required");
        EntityManager em = LiveGame.entityManager();
        TypedQuery<LiveGame> q = em.createQuery("SELECT o FROM LiveGame AS o WHERE o.broadcast = :broadcast", LiveGame.class);
        q.setParameter("broadcast", broadcast);
        return q;
    }
    
    public static TypedQuery<LiveGame> LiveGame.findLiveGamesByGameId(String gameId) {
        if (gameId == null || gameId.length() == 0) throw new IllegalArgumentException("The gameId argument is required");
        EntityManager em = LiveGame.entityManager();
        TypedQuery<LiveGame> q = em.createQuery("SELECT o FROM LiveGame AS o WHERE o.gameId = :gameId", LiveGame.class);
        q.setParameter("gameId", gameId);
        return q;
    }
    
    public static TypedQuery<LiveGame> LiveGame.findLiveGamesByStreamId(String streamId) {
        if (streamId == null || streamId.length() == 0) throw new IllegalArgumentException("The streamId argument is required");
        EntityManager em = LiveGame.entityManager();
        TypedQuery<LiveGame> q = em.createQuery("SELECT o FROM LiveGame AS o WHERE o.streamId = :streamId", LiveGame.class);
        q.setParameter("streamId", streamId);
        return q;
    }
    
}
