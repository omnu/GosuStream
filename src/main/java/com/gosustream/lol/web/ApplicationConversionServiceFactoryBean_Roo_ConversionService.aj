// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.gosustream.lol.web;

import com.gosustream.lol.domain.Game;
import com.gosustream.lol.domain.LiveGame;
import com.gosustream.lol.domain.Player;
import com.gosustream.lol.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Game, String> ApplicationConversionServiceFactoryBean.getGameToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.gosustream.lol.domain.Game, java.lang.String>() {
            public String convert(Game game) {
                return new StringBuilder().append(game.getGameId()).append(' ').append(game.getStartTime()).append(' ').append(game.getEndTime()).append(' ').append(game.getStreamId()).toString();
            }
        };
    }
    
    public Converter<Long, Game> ApplicationConversionServiceFactoryBean.getIdToGameConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.gosustream.lol.domain.Game>() {
            public com.gosustream.lol.domain.Game convert(java.lang.Long id) {
                return Game.findGame(id);
            }
        };
    }
    
    public Converter<String, Game> ApplicationConversionServiceFactoryBean.getStringToGameConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.gosustream.lol.domain.Game>() {
            public com.gosustream.lol.domain.Game convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Game.class);
            }
        };
    }
    
    public Converter<LiveGame, String> ApplicationConversionServiceFactoryBean.getLiveGameToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.gosustream.lol.domain.LiveGame, java.lang.String>() {
            public String convert(LiveGame liveGame) {
                return new StringBuilder().append(liveGame.getGameId()).append(' ').append(liveGame.getObserverKey()).append(' ').append(liveGame.getStartTime()).append(' ').append(liveGame.getPriority()).toString();
            }
        };
    }
    
    public Converter<Long, LiveGame> ApplicationConversionServiceFactoryBean.getIdToLiveGameConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.gosustream.lol.domain.LiveGame>() {
            public com.gosustream.lol.domain.LiveGame convert(java.lang.Long id) {
                return LiveGame.findLiveGame(id);
            }
        };
    }
    
    public Converter<String, LiveGame> ApplicationConversionServiceFactoryBean.getStringToLiveGameConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.gosustream.lol.domain.LiveGame>() {
            public com.gosustream.lol.domain.LiveGame convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), LiveGame.class);
            }
        };
    }
    
    public Converter<Player, String> ApplicationConversionServiceFactoryBean.getPlayerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.gosustream.lol.domain.Player, java.lang.String>() {
            public String convert(Player player) {
                return new StringBuilder().append(player.getAlias()).append(' ').append(player.getUrlEncodedAlias()).append(' ').append(player.getAccountId()).append(' ').append(player.getRegion()).toString();
            }
        };
    }
    
    public Converter<Long, Player> ApplicationConversionServiceFactoryBean.getIdToPlayerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.gosustream.lol.domain.Player>() {
            public com.gosustream.lol.domain.Player convert(java.lang.Long id) {
                return Player.findPlayer(id);
            }
        };
    }
    
    public Converter<String, Player> ApplicationConversionServiceFactoryBean.getStringToPlayerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.gosustream.lol.domain.Player>() {
            public com.gosustream.lol.domain.Player convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Player.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getGameToStringConverter());
        registry.addConverter(getIdToGameConverter());
        registry.addConverter(getStringToGameConverter());
        registry.addConverter(getLiveGameToStringConverter());
        registry.addConverter(getIdToLiveGameConverter());
        registry.addConverter(getStringToLiveGameConverter());
        registry.addConverter(getPlayerToStringConverter());
        registry.addConverter(getIdToPlayerConverter());
        registry.addConverter(getStringToPlayerConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
